
* evalをVM方式にする
* pairにファイル：行番号の情報を与える
* syntax のシンボルを保護的に
* syntax を別オブジェクトに
* define-macro を scheme的に
* intを埋め込みに
* 本物の多値
* 継続をもうちょっと能率的に

- cfuncのエラー処理をちゃんとする
- stringをNULL終端ではなく、長さベースに
- require を二度読み防止する
- retainをCのポインタベースにする
- string stream
- 関数の引数チェックでエラーを出す
- string関係の関数
- syntaxのキーワード対応
- stringリテラルのエスケープ
- string表示のエスケープ
- デバッグ用の変数を指定する関数 (*runtime-option* "trace" 1) みたいな
- #!対応
- let と let*の区別
- define-syntax
- SRFI-1 list library
- 名前付きlet
- gcをまともに
- bundle を hashに

**別言語のアイデア

* pairを遅延pairも含むようにする
* car, cdrを pair, string などに適用可能に
